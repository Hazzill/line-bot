const LINE_TOKEN = 'VpMkaVaNCwOaejC92asChDiA7vFSiodHuCaAyr3S9JYXJs0bWaqMLTDceK/Xm+9oBYnf+AY6IMJMCx8RDHLsmeVzVjahrwJdm3p2cmQcVX0reYthq0uMRii9VR1G54cR0xfyq2KnGe1FuVm9MQhqyQdB04t89/1O/w1cDnyilFU=';
const LINE_URL = 'https://api.line.me/v2/bot/message/reply';

function doPost(e) {
  const requestBody = JSON.parse(e.postData.contents);
  
  // Check if the event is a text message
  if (requestBody.events[0].type !== "message" || requestBody.events[0].message.type !== "text") {
    return;
  }
  
  const replyToken = requestBody.events[0].replyToken;
  const userId = requestBody.events[0].source.userId;
  const userMessage = requestBody.events[0].message.text;
  
  // Check if the message contains line breaks
  if (!userMessage.includes("\n")) {
    return;
  }
  
  const all_msg = userMessage.split("\n");
  const msg_num = all_msg.length;
  const messages = [];

  const sheet = SpreadsheetApp.getActiveSpreadsheet();
  const listSheet = sheet.getSheetByName("Order");
  const numColumn = listSheet.getLastColumn();
  const numRow = listSheet.getLastRow() - 1;
  const topRange = listSheet.getRange(1, 1, 1, numColumn);
  const dataRange = listSheet.getRange(2, 1, numRow, numColumn);
  const topData = topRange.getValues();
  const data = dataRange.getValues();
  const dataNum = data.length + 2;

  // Save data to the worksheet
  for (let i = 0; i < msg_num; i++) {
    listSheet.getRange(dataNum, i + 1).setValue(all_msg[i]);
  }

  const timestamp = new Date();
  const timestampString = timestamp.toLocaleString('en-US', { timeZone: 'Asia/Bangkok' });
  listSheet.getRange(dataNum, msg_num + 1).setValue(timestampString);
  listSheet.getRange(dataNum, msg_num + 2).setValue(userId);
  
  // Get user profile
  const userProfile = getUserProfile(userId);
  const userName = userProfile.displayName || 'User';
  
  // Create Flex message for the reply
  const flexMessage = {
    type: "flex",
    altText: "Received Data Details",
    contents: {
      type: "bubble",
      body: {
        type: "box",
        layout: "vertical",
        contents: [
          {
            type: "text",
            text: "Received Data Details",
            weight: "bold",
            size: "lg",
          },
          {
            type: "text",
            text: `Received Data: ${userMessage}`,
            margin: "lg",
          },
        ],
      },
    },
  };
  
  // Push the Flex message to the messages array
  messages.push(flexMessage);
  
  // Send the reply message to LINE
  UrlFetchApp.fetch(LINE_URL, {
    'headers': {
      'Content-Type': 'application/json; charset=UTF-8',
      'Authorization': `Bearer ${LINE_TOKEN}`,
    },
    'method': 'post',
    'payload': JSON.stringify({
    'replyToken': replyToken,
    'messages': messages,
    }),
    });

ContentService.createTextOutput(JSON.stringify({ content: 'post ok' })).setMimeType(ContentService.MimeType.JSON);
}

function getUserProfile(userId) {
const url = https://api.line.me/v2/bot/profile/${userId};

// Fetch user profile data from LINE API
const response = UrlFetchApp.fetch(url, {
headers: {
'Content-Type': 'application/json',
'Authorization': Bearer ${LINE_TOKEN}
},
method: 'get'
});

const userProfile = JSON.parse(response.getContentText());
return userProfile;
}

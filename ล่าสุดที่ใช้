const LINE_TOKEN = 'E6sXMQiKKnbAXECPY55mSTw1zA6SsoDTzgCqzpvDjPmbUlDBQSofNOUK6HkMRUcDBYnf+AY6IMJMCx8RDHLsmeVzVjahrwJdm3p2cmQcVX3AnjAkzS9kkFxGI02rjQECUZ6Ky+DQ+n1R9wGCDxnwhgdB04t89/1O/w1cDnyilFU=';
const LINE_URL = 'https://api.line.me/v2/bot/message/reply';

function doPost(e) {
  if (JSON.parse(e.postData.contents).events[0].type !== "message" || JSON.parse(e.postData.contents).events[0].message.type !== "text") {
    return;
  }
  const replyToken = JSON.parse(e.postData.contents).events[0].replyToken;
  const userId = JSON.parse(e.postData.contents).events[0].source.userId;
  const userMessage = JSON.parse(e.postData.contents).events[0].message.text;
  
  if (!userMessage.includes("\n")) {
    return;
  }
  const all_msg = userMessage.split("\n");
  const msg_num = all_msg.length;
  const messages = [];
  const sheet = SpreadsheetApp.getActiveSpreadsheet();
  const listSheet = sheet.getSheetByName("Order");
  const numColumn = listSheet.getLastColumn();
  const numRow = listSheet.getLastRow() - 1;
  const topRange = listSheet.getRange(1, 1, 1, numColumn);
  const dataRange = listSheet.getRange(2, 1, numRow, numColumn);
  const topData = topRange.getValues();
  const data = dataRange.getValues();
  const dataNum = data.length + 2;

  for (let i = 0; i < msg_num; i++) {
    listSheet.getRange(dataNum, i + 1).setValue(all_msg[i]);
  }

  const timestamp = new Date();
  const timestampString = timestamp.toLocaleString('en-US', { timeZone: 'Asia/Bangkok' });
  listSheet.getRange(dataNum, msg_num + 1).setValue(timestampString);
  listSheet.getRange(dataNum, msg_num + 2).setValue(userId);
  
  const userProfile = getUserProfile(userId);
  const userName = userProfile.displayName || 'User';
  const replyMessage = `สวัสดีคุณ ${userName}\n บันทึกรายการสั่งซื้อเรียบร้อยค่ะ`;

  const after_msg = {
    "type": "text",
    "text": replyMessage
  };
  messages.push(after_msg);

  UrlFetchApp.fetch(LINE_URL, {
    'headers': {
      'Content-Type': 'application/json; charset=UTF-8',
      'Authorization': `Bearer ${LINE_TOKEN}`,
    },
    'method': 'post',
    'payload': JSON.stringify({
      'replyToken': replyToken,
      'messages': messages,
    }),
  });

  ContentService.createTextOutput(JSON.stringify({ 'content': 'post ok' })).setMimeType(ContentService.MimeType.JSON);
}

function getUserProfile(userId) {
  const url = `https://api.line.me/v2/bot/profile/${userId}`;

    const response = UrlFetchApp.fetch(url, {
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${LINE_TOKEN}`
      },
      method: 'get'
    });


const userProfile = JSON.parse(response.getContentText());
return userProfile;
}

function showOrderTable() {
const userId = Session.getActiveUser().getEmail();
const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Order");
const dataRange = sheet.getDataRange();
const dataValues = dataRange.getValues();
const filteredData = dataValues.filter(function(row) {
return row[row.length - 1] === userId;
});

const template = HtmlService.createTemplateFromFile('sidebar');
template.data = filteredData;

const htmlOutput = template.evaluate();SpreadsheetApp.getUi().showSidebar(htmlOutput);
}
